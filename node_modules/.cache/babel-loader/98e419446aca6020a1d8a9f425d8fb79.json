{"ast":null,"code":"import _slicedToArray from \"C:/Users/vinay/deta.coe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPool3D } from '../kernel_names';\nimport { maxPool3dGrad } from '../ops/max_pool_3d_grad';\nexport var maxPool3DGradConfig = {\n  kernelName: MaxPool3D,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        _x = _saved[0],\n        y = _saved[1];\n\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        dilations = attrs.dilations,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode;\n    var $dilations = dilations == null ? [1, 1, 1] : dilations;\n    return {\n      x: function x() {\n        return maxPool3dGrad(dy, _x, y, filterSize, strides, $dilations, pad, dimRoundingMode);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/MaxPool3D_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,SAAR,QAAwC,iBAAxC;AAEA,SAAQ,aAAR,QAA4B,yBAA5B;AAGA,OAAO,IAAM,mBAAmB,GAAe;AAC7C,EAAA,UAAU,EAAE,SADiC;AAE7C,EAAA,YAAY,EAAE,CAAC,GAAD,CAF+B;AAG7C,EAAA,aAAa,EAAE,CAAC,IAAD,CAH8B;AAI7C,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;AAC7D,gCAAe,KAAf;AAAA,QAAO,EAAP;AAAA,QAAU,CAAV;;AACA,QAAO,UAAP,GACI,KADJ,CAAO,UAAP;AAAA,QAAmB,OAAnB,GACI,KADJ,CAAmB,OAAnB;AAAA,QAA4B,SAA5B,GACI,KADJ,CAA4B,SAA5B;AAAA,QAAuC,GAAvC,GACI,KADJ,CAAuC,GAAvC;AAAA,QAA4C,eAA5C,GACI,KADJ,CAA4C,eAA5C;AAGA,QAAM,UAAU,GACZ,SAAS,IAAI,IAAb,GAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAApB,GAA4D,SADhE;AAGA,WAAO;AACL,MAAA,CAAC,EAAE;AAAA,eAAM,aAAa,CAClB,EADkB,EACF,EADE,EACC,CADD,EACI,UADJ,EACgB,OADhB,EACyB,UADzB,EACqC,GADrC,EAElB,eAFkB,CAAnB;AAAA;AADE,KAAP;AAKD;AAjB4C,CAAxC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPool3D } from '../kernel_names';\nimport { maxPool3dGrad } from '../ops/max_pool_3d_grad';\nexport const maxPool3DGradConfig = {\n    kernelName: MaxPool3D,\n    inputsToSave: ['x'],\n    outputsToSave: [true],\n    gradFunc: (dy, saved, attrs) => {\n        const [x, y] = saved;\n        const { filterSize, strides, dilations, pad, dimRoundingMode } = attrs;\n        const $dilations = dilations == null ? [1, 1, 1] : dilations;\n        return {\n            x: () => maxPool3dGrad(dy, x, y, filterSize, strides, $dilations, pad, dimRoundingMode)\n        };\n    }\n};\n//# sourceMappingURL=MaxPool3D_grad.js.map"]},"metadata":{},"sourceType":"module"}